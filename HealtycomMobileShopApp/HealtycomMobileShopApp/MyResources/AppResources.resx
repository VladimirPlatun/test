<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AD" xml:space="preserve">
    <value>Applicant's details</value>
  </data>
  <data name="AddNew" xml:space="preserve">
    <value>Add New</value>
  </data>
  <data name="AddToCart" xml:space="preserve">
    <value>Add to Cart</value>
  </data>
  <data name="ANA" xml:space="preserve">
    <value>Add new address</value>
  </data>
  <data name="Authorization" xml:space="preserve">
    <value>Authorization</value>
  </data>
  <data name="Cart" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="Catalog" xml:space="preserve">
    <value>Catalog</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Checkout" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>To continue, login or register an account</value>
  </data>
  <data name="CP" xml:space="preserve">
    <value>Contact Person</value>
  </data>
  <data name="CPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Czech" xml:space="preserve">
    <value>Czech</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DIC" xml:space="preserve">
    <value>DIC</value>
  </data>
  <data name="Dosage" xml:space="preserve">
    <value>Dosage:</value>
  </data>
  <data name="DPF" xml:space="preserve">
    <value>Delivery pickup - free</value>
  </data>
  <data name="DPF10" xml:space="preserve">
    <value>Delivery by courier to the door - 10 EUR</value>
  </data>
  <data name="DPF5" xml:space="preserve">
    <value>Delivery by mail - 5 EUR</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmptyCart" xml:space="preserve">
    <value>Empty cart</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="ETP" xml:space="preserve">
    <value>Enter the password</value>
  </data>
  <data name="EYM" xml:space="preserve">
    <value>Enter your email</value>
  </data>
  <data name="FoodSupplements" xml:space="preserve">
    <value>Food supplements</value>
  </data>
  <data name="FY" xml:space="preserve">
    <value>Forgot your</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="HotDeals" xml:space="preserve">
    <value>Hot Deals</value>
  </data>
  <data name="IAT" xml:space="preserve">
    <value>I agree to</value>
  </data>
  <data name="IATRN" xml:space="preserve">
    <value>I agree to receive newsletters</value>
  </data>
  <data name="ICO" xml:space="preserve">
    <value>ICO</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="LS" xml:space="preserve">
    <value>Legal status</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MP" xml:space="preserve">
    <value>Mobile phone</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewArrivals" xml:space="preserve">
    <value>New Arrivals</value>
  </data>
  <data name="NoA" xml:space="preserve">
    <value>No account?</value>
  </data>
  <data name="NoAddresses" xml:space="preserve">
    <value>Addresses not found</value>
  </data>
  <data name="NoCat" xml:space="preserve">
    <value>No Category found.</value>
  </data>
  <data name="NofCap" xml:space="preserve">
    <value>Number of capsules:</value>
  </data>
  <data name="NoItems" xml:space="preserve">
    <value>No Items found.</value>
  </data>
  <data name="NoProduct" xml:space="preserve">
    <value>No product found.</value>
  </data>
  <data name="NotStock" xml:space="preserve">
    <value>Not in stock</value>
  </data>
  <data name="NPF" xml:space="preserve">
    <value>No product found.</value>
  </data>
  <data name="NumberOfItem" xml:space="preserve">
    <value>Number of Item</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PAYMENTMETHOD" xml:space="preserve">
    <value>PAYMENT METHOD</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price:</value>
  </data>
  <data name="Proceed" xml:space="preserve">
    <value>Proceed</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="SaR" xml:space="preserve">
    <value>Submit a request</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SHIPPINGADDRESS" xml:space="preserve">
    <value>SHIPPING ADDRESS</value>
  </data>
  <data name="SHOPNOW" xml:space="preserve">
    <value>SHOP NOW</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="SpaceP" xml:space="preserve">
    <value> password</value>
  </data>
  <data name="SpaceR" xml:space="preserve">
    <value> Register</value>
  </data>
  <data name="Stock" xml:space="preserve">
    <value>In stock</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalWeight" xml:space="preserve">
    <value>Total weight:</value>
  </data>
  <data name="TPOPD" xml:space="preserve">
    <value> the processing of personal data</value>
  </data>
  <data name="TTAC" xml:space="preserve">
    <value> the terms and conditions</value>
  </data>
  <data name="ViewAll" xml:space="preserve">
    <value>View all</value>
  </data>
  <data name="Wishlist" xml:space="preserve">
    <value>Wishlist</value>
  </data>
  <data name="WishlistEmpty" xml:space="preserve">
    <value>Wishlist is empty.</value>
  </data>
</root>